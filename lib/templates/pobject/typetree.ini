<?php

	if (!function_exists('addType')) {
		function addType($type, $name, $parents, $children, $icon) {
		global $ARCurrent;
			if (!$ARConfig->arTypeTree[$type]) {
				$ARConfig->arTypeTree[$type]=array();
			}
			if (is_array($parents)) {
				foreach($parents as $parent) {
					$ARConfig->arTypeTree[$parent][$type]=$name;
				}
			} else if (is_string($parents)) {
				$ARConfig->arTypeTree[$parents][$type]=$name;
			}
			if (is_array($children)) {
				foreach($children as $child => $name) {
					$ARConfig->arTypeTree[$type][$child]=$name;
				}
			}
			$ARConfig->arTypeIcons[$type]=$icon;
		}
	}

	$typelist = array(
		"pdir",
		"pfile",
		"pgroup",
		"pobject",
		"ppage",
		"pphoto",
		"pphotobook",
		"pproject",
		"pscenario",
		"pshortcut",
		"psite",
		"puser",
		"pprofile",
		"psection",
		"punittest"
	);

	$ARCurrent->arTypeIcons = array();
	$ARCurrent->arTypeNames = array();
	foreach ($typelist as $type) {
		$ARCurrent->arTypeNames[$type] = ( $ARnls["ariadne:types:$type"] ? $ARnls["ariadne:types:$type"] : $type);
		$ARCurrent->arTypeIcons[$type] = array(
			"default" => $AR->dir->images.'icons/large/' . $type . '.png',
			"large" => $AR->dir->images.'icons/large/' . $type . '.png',
			"medium"  => $AR->dir->images.'icons/medium/' . $type . '.png',
			"small"   => $AR->dir->images.'icons/small/' . $type . '.png'
		);
	}


	if ( !$ARCurrent->arTypeTree ) {
		$ARCurrent->arTypeTree = array();
	}

	$ARCurrent->arTypeTree += array(
		"pdir" => array(
			"pdir" => true,
			"pfile" => true,
			"pobject" => true,
			"ppage" => true,
			"pphotobook" => true,
			"psection" => true,
			"pshortcut" => true,
			"psite" => true,
		),

		"pfile" => array(),

		"pgroup" => array(),

		"pobject" => array(),

		"ppage" => array(
			"pfile" => true,
			"pphoto" => true,
		),

		"pphoto" => array(),

		"pphotobook" => array(
			"pphoto" => true,
			"pphotobook" => true,
			"pshortcut" => true,
		),

		"pprofile" => array(),

		"pproject" => array(
			"pdir" => true,
			"pphotobook" => true,
			"psection" => true,
			"pshortcut" => true,
			"psite" => true,
			"pproject" => true
		),

		"psection" => array(
			"pdir" => true,
			"pfile" => true,
			"pobject" => true,
			"ppage" => true,
			"pphotobook" => true,
			"psection" => true,
			"pshortcut" => true,
			"psite" => true,
		),

		"pshortcut" => array(),

		"psite" => array(
			"pdir" => true,
			"pfile" => true,
			"pobject" => true,
			"ppage" => true,
			"pphotobook" => true,
			"psection" => true,
			"pshortcut" => true,
			"psite" => true,
		),

		"puser" => array(
			"pdir" => true,
			"pfile" => true,
			"pobject" => true,
			"ppage" => true,
			"pphotobook" => true,
			"pshortcut" => true,
		),

		"punittest" => array(
			"pdir" => true,
			"pphotobook" => true,
			"pfile" => true
		)

	);

	foreach( $ARCurrent->arTypeTree as $key => $value ) {
		foreach( $value as $vkey => $val) {
			$ARCurrent->arTypeTree[$key][$vkey] = $ARCurrent->arTypeNames[$vkey];
		}
	}

	$allnls = $ARCurrent->allnls;
	$ARCurrent->allnls = true;
	if ($this->CheckLogin('read') && $this->CheckConfig($arCallFunction, $arCallArgs)) {
		$arResult=$ARCurrent->arTypeTree;
	}
	$ARCurrent->allnls = $allnls;

	if (!$arResult && !$ARCurrent->arResult) {
		$arResult=$ARCurrent->arTypeTree;
	}
?>